"""Add new column to tasks table

Revision ID: eaeeeb8335a8
Revises: 
Create Date: 2025-09-16 02:58:00.521626

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'eaeeeb8335a8'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_workspaces_id'), table_name='workspaces')
    op.drop_table('workspaces')
    op.drop_index(op.f('ix_ml_models_id'), table_name='ml_models')
    op.drop_index(op.f('ix_ml_models_model_name'), table_name='ml_models')
    op.drop_table('ml_models')
    op.drop_index(op.f('ix_study_streaks_id'), table_name='study_streaks')
    op.drop_table('study_streaks')
    op.add_column('subjects', sa.Column('date', sa.DateTime(), nullable=False))
    op.drop_column('tasks', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tasks', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('subjects', 'date')
    op.create_table('study_streaks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('streak_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('daily_minutes_studied', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('study_streaks_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('study_streaks_pkey'))
    )
    op.create_index(op.f('ix_study_streaks_id'), 'study_streaks', ['id'], unique=False)
    op.create_table('ml_models',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('model_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('version', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('path', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('trained_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('performance_metrics', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('ml_models_pkey'))
    )
    op.create_index(op.f('ix_ml_models_model_name'), 'ml_models', ['model_name'], unique=False)
    op.create_index(op.f('ix_ml_models_id'), 'ml_models', ['id'], unique=False)
    op.create_table('workspaces',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('workspaces_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('workspaces_pkey'))
    )
    op.create_index(op.f('ix_workspaces_id'), 'workspaces', ['id'], unique=False)
    # ### end Alembic commands ###
